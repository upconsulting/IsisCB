option_settings:
  "aws:rds:dbinstance":
    DBEngineVersion: 9.4.7
  "aws:elasticbeanstalk:application:environment":
    DJANGO_SETTINGS_MODULE: "isiscb.production_settings"
    PYTHONPATH: "/opt/python/current/app/isiscb:$PYTHONPATH"

  "aws:elasticbeanstalk:container:python":
    WSGIPath: "isiscb/isiscb/wsgi.py"

option_settings:
    - namespace: aws:elasticbeanstalk:command
      option_name: Timeout
      value: 1800

Resources:
  sslSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0
  AWSEBAutoScalingGroup:
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          type: "s3"
          buckets: ["elasticbeanstalk-us-west-2-655333410217"]
          roleName:
            "Fn::GetOptionSetting":
              Namespace: "aws:autoscaling:launchconfiguration"
              OptionName: "IamInstanceProfile"
              DefaultValue: "aws-elasticbeanstalk-ec2-role"

files:
  /etc/httpd/conf.d/ssl.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      LoadModule wsgi_module modules/mod_wsgi.so
      LoadModule rewrite_module modules/mod_rewrite.so
      WSGIPythonHome /opt/python/run/venv
      WSGISocketPrefix run/wsgi
      WSGIRestrictEmbedded On
      Listen 443
      <VirtualHost *:443>
        RequestHeader set X-Forwarded-Proto "https"
        SSLEngine on
        SSLCertificateFile "/etc/pki/tls/certs/server.crt"
        SSLCertificateKeyFile "/etc/pki/tls/certs/server.key"

        Alias /static/ /opt/python/current/app/static/
        <Directory /opt/python/current/app/static>
        Order allow,deny
        Allow from all
        </Directory>

        WSGIScriptAlias / /opt/python/current/app/isiscb/isiscb/wsgi.py

        <Directory /opt/python/current/app>
        Require all granted
        </Directory>

        WSGIDaemonProcess wsgi-ssl processes=1 threads=15 display-name=%{GROUP} \
          python-path=/opt/python/run/venv:/opt/python/current/app:/opt/python/run/venv/lib64/python2.7/site-packages \
          home=/opt/python/current/app \
          user=wsgi \
          group=wsgi
        WSGIProcessGroup wsgi-ssl

      </VirtualHost>

  /etc/pki/tls/certs/server.crt:
    mode: "000400"
    owner: root
    group: root
    content: |
      -----BEGIN CERTIFICATE-----
      MIID6DCCAtACCQCW0G8hMdcb0zANBgkqhkiG9w0BAQUFADCBtTELMAkGA1UEBhMC
      VVMxETAPBgNVBAgTCE9rbGFob21hMQ8wDQYDVQQHEwZOb3JtYW4xNDAyBgNVBAoT
      K0lzaXMgQmlibGlvZ3JhcGh5IG9mIHRoZSBIaXN0b3J5IG9mIFNjaWVuY2UxLDAq
      BgNVBAMTI2lzaXNjYi1zdGFnaW5nLmVsYXN0aWNiZWFuc3RhbGsuY29tMR4wHAYJ
      KoZIhvcNAQkBFg9zcHdlbGRvbkBvdS5lZHUwHhcNMTYwNjE1MjI0NzQwWhcNMTcw
      NjE1MjI0NzQwWjCBtTELMAkGA1UEBhMCVVMxETAPBgNVBAgTCE9rbGFob21hMQ8w
      DQYDVQQHEwZOb3JtYW4xNDAyBgNVBAoTK0lzaXMgQmlibGlvZ3JhcGh5IG9mIHRo
      ZSBIaXN0b3J5IG9mIFNjaWVuY2UxLDAqBgNVBAMTI2lzaXNjYi1zdGFnaW5nLmVs
      YXN0aWNiZWFuc3RhbGsuY29tMR4wHAYJKoZIhvcNAQkBFg9zcHdlbGRvbkBvdS5l
      ZHUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC2KTqC8XIbpc1I5Wu6
      rzy/FEWor5LqN/c+EgQbFfrk3XDRCTx6PHkM/mFfKEbK0sMiQK2MAzFu8FnZ5nbh
      i0fEytuAPNd4XK2BmFEIn5svoSUzq1yo5ykj2yQVULRRsq2wTLB/+LU/QHf5QgB4
      d7KUA3Ex7yHwegRDZdgK751Vq5HlPFgQMxg3++x5B+frHEaGMDOpVWU0yutgtbcU
      jsUyG2GU7c+QBdkkVRqbbTtaRhd5j3e7VxyjIPXWT4PSg08KNnK3FzYqQX2WubNU
      wC3EW/JSCXkjfY6AfgldQ9NXS+0f/g3T68c4w81MWoqDwM9+/gQACoBN6BvRVAg8
      9nJRAgMBAAEwDQYJKoZIhvcNAQEFBQADggEBAB/Imzla1YcGiIgOoQ+2Nok3KLi7
      O5sSMbIY+KVqfiZ2DqCnRe7m9umRaXHa/3MubLKnG9nTzNEd2caBfZl7JAtxjNTf
      d/JhznjhhV+zsj6R/5oJX1ZfZAoDlK2RmeXSbaXja0hK1BQidIRBS0mYRy8Fxo/d
      PgPNukhUqN90zKrIsJRyVtRhBn2iKjjvZU3MfMwpimKwuZ4z+Tyiblt8M65EqZxG
      t2CJjYpv7GKwhcCmjGDeA2WqBVfRNih1sEl9jzwFFybGeAyTLOxSxlk7ZWAb0yql
      ybjUGtXoPLhjHk2i3f5ThRE0FkzD+QJoMS1sh0sDxJi2VXqsXtW00PjxtF0=
      -----END CERTIFICATE-----

  /etc/pki/tls/certs/server.key:
    mode: "000400"
    owner: root
    group: root
    authentication: "S3Auth"
    source: https://s3-us-west-2.amazonaws.com/elasticbeanstalk-us-west-2-655333410217/ssl/privatekey.pem

container_commands:
  01_migrate:
    command: "source /opt/python/run/venv/bin/activate && cd isiscb && python manage.py migrate auth --noinput && python manage.py migrate --noinput"
    leader_only: true
    test: '[ "${IS_DOCKER}" != "true" ]'
  02_collectstatic:
    command: "source /opt/python/run/venv/bin/activate && cd isiscb && python manage.py collectstatic --noinput"
    leader_only: true
    test: '[ "${IS_DOCKER}" != "true" ]'
  03_createsu:
    command: "source /opt/python/run/venv/bin/activate && cd isiscb && python manage.py createsu"
    leader_only: true
    test: '[ "${IS_DOCKER}" != "true" ]'
  04_wsgipass:
    command: 'cp wsgi.conf ../wsgi.conf'
    test: '[ "${IS_DOCKER}" != "true" ]'
  05_uninstall_pil:
    command: "source /opt/python/run/venv/bin/activate && yes | pip uninstall Pillow"
    test: '[ "${IS_DOCKER}" != "true" ]'
  06_reinstall_pil:
    command: "source /opt/python/run/venv/bin/activate && yes | pip install Pillow --no-cache-dir"
    test: '[ "${IS_DOCKER}" != "true" ]'
  07_update_pip:
    command: "source /opt/python/run/venv/bin/activate && pip install -U pip"
    test: '[ "${IS_DOCKER}" != "true" ]'
  08_update_six:
    command: "source /opt/python/run/venv/bin/activate && pip install -U six"
    test: '[ "${IS_DOCKER}" != "true" ]'
  09_update_setuptools:
    command: "source /opt/python/run/venv/bin/activate && pip install -U setuptools==33.1.1"
    test: '[ "${IS_DOCKER}" != "true" ]'
  10_install_pycurl_with_nss:
    command: "source /opt/python/run/venv/bin/activate && PYCURL_SSL_LIBRARY=nss /opt/python/run/venv/bin/pip install --ignore-installed --no-cache-dir --install-option='--with-nss' --compile pycurl"
    test: '[ "${IS_DOCKER}" != "true" ]'
